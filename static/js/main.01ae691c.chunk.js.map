{"version":3,"sources":["components/ContactForm/PhoneBook.module.css","components/filter/Filter.module.css","components/ContactList/list.module.css","transition/styles.module.css","components/AlertComponent/alertContact.module.css","components/ContactList/ContactList.module.css","transition/slide.module.css","transition/filter.module.css","transition/logo.module.css","components/PhoneBook/logo.module.css","Redux/actions/actions.js","components/AlertComponent/AlertContact.js","Redux/reducers/Selectors/contactSelectors.js","components/ContactForm/contactForm.js","components/ContactList/list.js","components/ContactList/ContactListItem.js","components/ContactList/contactList.js","containers/VisibleContacts.js","components/filter/filter.js","components/PhoneBook/PhoneBook.js","App.js","Redux/reducers/contactsReducer.js","Redux/reducers/filterReducer.js","Redux/store.js","index.js"],"names":["module","exports","Type","filterContact","value","type","payload","AlertContact","isActiv","CSSTransition","in","classNames","styles","timeout","mountOnEnter","unmountOnExit","className","st","alert","onContact","state","contacts","ContactForm","name","number","error","userId","shortid","generate","handleChange","e","target","setState","handleSubmit","preventDefault","nameValid","setTimeout","props","addContact","id","find","item","this","style","contactForm","onSubmit","contactForm_label","htmlFor","contactForm_input","onChange","autoComplete","contactForm_button","Component","connect","dispatch","contact","List","deleteContact","list","button","onClick","ContactListItems","slideStyle","key","ContactList","length","contactList","map","ContactListItem","getVisibylitiContacts","filterName","filter","toLowerCase","includes","Filter","onChangeFilter","filterStyle","formFilter","formName_label","formName_input","placeholder","PhoneBookLogo","title","logo","s","App","handleFIlter","TransitionGroup","component","onHandleForm","handleForm","items","onDeleteList","deleteList","text","defaultState","contactReducer","action","filterReducer","rootReducer","combineReducers","contactsReducer","persistConfig","storage","whitelist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistedReducer","persistReducer","store","configureStore","reducer","persistor","persistStore","ReactDOM","render","loading","document","querySelector"],"mappings":"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","file":"static/js/main.01ae691c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"PhoneBook_contactForm__1NkuI\",\"contactForm_label\":\"PhoneBook_contactForm_label__1s9z0\",\"contactForm_input\":\"PhoneBook_contactForm_input__2bg-t\",\"contactForm_button\":\"PhoneBook_contactForm_button__2bhBx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formFilter\":\"Filter_formFilter__2J_ry\",\"formName_label\":\"Filter_formName_label__3Jg8o\",\"formName_input\":\"Filter_formName_input__1LHVS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"list_list__3ltc6\",\"button\":\"list_button__2s_hz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"styles_enter__11Gwy\",\"enterActive\":\"styles_enterActive__Jl7FV\",\"exit\":\"styles_exit__IJNUL\",\"exitActive\":\"styles_exitActive__dD7UA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"alertContact_alert__1jqv3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1DAF7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__1zhQR\",\"enterActive\":\"slide_enterActive__1oGvj\",\"exit\":\"slide_exit__2kumd\",\"exitActive\":\"slide_exitActive__2rums\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"filter_enter__1OJ1R\",\"enterActive\":\"filter_enterActive__1PzLO\",\"exit\":\"filter_exit__DEvrk\",\"exitActive\":\"filter_exitActive__2WIdM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"logo_enter__2jUaq\",\"enterActive\":\"logo_enterActive__k6GbL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"logo_title__2sJ4J\"};","export const Type = {\r\n  ADD: \"ADD\",\r\n  DELETE: \"DELETE_CONTACT\",\r\n  SET_VISIBILITY_FILTER: \"SET_VISIBILITY_FILTER\",\r\n};\r\n\r\nexport const deleteContact = (id) => ({\r\n  type: Type.DELETE,\r\n  payload: id,\r\n});\r\n\r\nexport const addContact = (contact) => ({\r\n  type: Type.ADD,\r\n  payload: contact,\r\n});\r\n\r\nexport const filterContact = (value) => ({\r\n  type: Type.SET_VISIBILITY_FILTER,\r\n  payload: value,\r\n});\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"../../transition/styles.module.css\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport st from \"./alertContact.module.css\";\r\n\r\nconst AlertContact = ({ isActiv = false }) => (\r\n  <CSSTransition\r\n    in={isActiv}\r\n    classNames={styles}\r\n    timeout={250}\r\n    mountOnEnter\r\n    unmountOnExit\r\n  >\r\n    <div className={st.alert}>contact already exists</div>\r\n  </CSSTransition>\r\n);\r\n\r\nAlertContact.propTypes = {\r\n  isActive: PropTypes.bool,\r\n};\r\n\r\nexport default AlertContact;\r\n","\r\n\r\nexport const onContact = (state) => state.contacts.contacts;\r\n\r\n","import React, { Component, Fragment } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport style from \"./PhoneBook.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { addContact } from \"../../Redux/actions/actions\";\r\nimport AlertContact from \"../AlertComponent/AlertContact\";\r\nimport { onContact } from \"../../Redux/reducers/Selectors/contactSelectors\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    error: false,\r\n  };\r\n\r\n  userId = shortid.generate();\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.nameValid()) {\r\n      this.setState({ error: true });\r\n      setTimeout(() => this.setState({ error: false }), 2000);\r\n    } else {\r\n      this.props.addContact({ ...this.state, id: shortid.generate() });\r\n    }\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  nameValid = () => {\r\n    const notValid = this.props.contacts.find(\r\n      (item) => item.name === this.state.name\r\n    );\r\n    return notValid;\r\n  };\r\n\r\n  render() {\r\n    const { name, number, error } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <AlertContact isActiv={error} />\r\n\r\n        <form className={style.contactForm} onSubmit={this.handleSubmit}>\r\n          <label className={style.contactForm_label} htmlFor={this.userId}>\r\n            Name\r\n            <input\r\n              className={style.contactForm_input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n              id={this.userId}\r\n              autoComplete=\"off\"\r\n            />\r\n          </label>\r\n          <label className={style.contactForm_label} htmlFor={this.userId}>\r\n            Number\r\n            <input\r\n              className={style.contactForm_input}\r\n              type=\"text\"\r\n              name=\"number\"\r\n              value={number}\r\n              onChange={this.handleChange}\r\n              autoComplete=\"off\"\r\n            />\r\n          </label>\r\n          <button className={style.contactForm_button} type=\"submit\">\r\n            Add contacts\r\n          </button>\r\n        </form>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst MSTP = (state) => ({\r\n  contacts: onContact(state),\r\n});\r\n\r\nconst MDTP = (dispatch) => ({\r\n  addContact: (contact) => dispatch(addContact(contact)),\r\n});\r\n\r\nexport default connect(MSTP, MDTP)(ContactForm);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./list.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteContact } from \"../../Redux/actions/actions\";\r\n\r\nclass List extends Component {\r\n  static propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  };\r\n\r\n  deleteContact = () => {\r\n    this.props.deleteContact(this.props.id);\r\n  };\r\n\r\n  render() {\r\n    const { number, name } = this.props;\r\n    return (\r\n      <>\r\n        <div className={style.list}>\r\n          {number} : {name}\r\n          <button\r\n            className={style.button}\r\n            type=\"button\"\r\n            onClick={this.deleteContact}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst MDTP = (dispatch) => ({\r\n  deleteContact: (id) => dispatch(deleteContact(id)),\r\n});\r\n\r\nexport default connect(null, MDTP)(List);\r\n","import React from \"react\";\r\nimport List from \"./list\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport slideStyle from \"../../transition/slide.module.css\";\r\n\r\nconst ContactListItems = ({ item }) => (\r\n  <>\r\n    <CSSTransition\r\n      in\r\n      timeout={250}\r\n      classNames={slideStyle}\r\n      key={item.id}\r\n      unmountOnExit\r\n    >\r\n      <li>\r\n        <List {...item} />\r\n      </li>\r\n    </CSSTransition>\r\n  </>\r\n);\r\n\r\nexport default ContactListItems;\r\n","import React from \"react\";\r\nimport style from \"./ContactList.module.css\";\r\nimport ContactListItem from \"./ContactListItem\";\r\n\r\nconst ContactList = ({ contacts }) => {\r\n  return (\r\n    <>\r\n      {contacts.length > 0 && (\r\n        <ul className={style.contactList}>\r\n          {contacts.map((item) => (\r\n            <ContactListItem item={item} key={item.id} />\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import { connect } from \"react-redux\";\r\nimport ContactList from \"../components/ContactList/contactList\";\r\n\r\nconst getVisibylitiContacts = (contacts, filterName) => {\r\n  return filterName\r\n    ? contacts.filter((contact) =>\r\n        contact.name.toLowerCase().includes(filterName.toLowerCase())\r\n      )\r\n    : contacts;\r\n};\r\n\r\nconst mapStateToProps = ({ contacts, filter }) => ({\r\n  contacts: getVisibylitiContacts(contacts.contacts, filter),\r\n});\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./Filter.module.css\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport filterStyle from \"../../transition/filter.module.css\";\r\n\r\nconst Filter = ({ onChangeFilter }) => {\r\n  return (\r\n    <CSSTransition in timeout={250} classNames={filterStyle} unmountOnExit>\r\n      <form className={style.formFilter}>\r\n        <label className={style.formName_label}>Find Contacts by Name</label>\r\n        <input\r\n          className={style.formName_input}\r\n          type=\"text\"\r\n          onChange={onChangeFilter}\r\n          placeholder=\"Type to filter contacts...\"\r\n          autoComplete=\"off\"\r\n        />\r\n      </form>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport logo from \"../../transition/logo.module.css\";\r\nimport s from \"./logo.module.css\";\r\n\r\nexport default class PhoneBookLogo extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n  };\r\n\r\n  state = {\r\n    isActiv: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    setTimeout(() => this.setState({ isActiv: true }), 300);\r\n  }\r\n\r\n  render() {\r\n    const { isActiv } = this.state;\r\n    const { title } = this.props;\r\n    return (\r\n      <CSSTransition in={isActiv} classNames={logo} timeout={500}>\r\n        <div className={s.title}>{title}</div>\r\n      </CSSTransition>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport { TransitionGroup } from \"react-transition-group\";\n\nimport ContactForm from \"./components/ContactForm/contactForm\";\nimport VisibleContactList from \"./containers/VisibleContacts\";\nimport Filter from \"./components/filter/filter\";\nimport PhoneBook from \"./components/PhoneBook/PhoneBook\";\nimport { connect } from \"react-redux\";\nimport { filterContact } from \"./Redux/actions/actions\";\nimport { onContact } from \"./Redux/reducers/Selectors/contactSelectors\";\n\nclass App extends Component {\n  handleFIlter = (e) => {\n    this.props.filterContact(e.target.value);\n  };\n\n  render() {\n    return (\n      <TransitionGroup component={null}>\n        <>\n          <PhoneBook title=\"PhoneBook\" />\n          <ContactForm onHandleForm={this.handleForm} />\n          <h2>Contacts</h2>\n          {this.props.contacts.length >= 2 && (\n            <Filter onChangeFilter={this.handleFIlter} />\n          )}\n          <VisibleContactList\n            items={filterContact}\n            onDeleteList={this.deleteList}\n          />\n        </>\n      </TransitionGroup>\n    );\n  }\n}\n\nconst MSTP = (state) => ({\n  contacts: onContact(state),\n});\n\nconst MDTP = (dispatch) => ({\n  filterContact: (text) => dispatch(filterContact(text)),\n});\n\nexport default connect(MSTP, MDTP)(App);\n","import { Type } from \"../actions/actions\";\r\n\r\nconst defaultState = {\r\n  contacts: [],\r\n};\r\n\r\nconst contactReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case Type.ADD:\r\n      return { ...state, contacts: [...state.contacts, action.payload] };\r\n\r\n    case Type.DELETE:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact.id !== action.payload\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default contactReducer;\r\n\r\n\r\n\r\n","import { Type } from \"../actions/actions\";\r\n\r\nconst defaultState = \"\";\r\n\r\nconst filterReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case Type.SET_VISIBILITY_FILTER:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default filterReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport contactsReducer from \"./reducers/contactsReducer\";\r\nimport filterReducer from \"./reducers/filterReducer\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  whitelist: [\"contacts\"],\r\n};\r\n\r\nconst defaultMiddlewareConfig = {\r\n  serializableCheck: {\r\n    ignoredActions: [\"persist/PERSIST\"],\r\n  },\r\n};\r\n\r\nconst middleware = [...getDefaultMiddleware(defaultMiddlewareConfig)];\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware,\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\n\nimport { store, persistor } from \"./Redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}